#+STARTUP: showeverything

* Cheat
An Emacs package to register and create cheatsheets based on org-mode.

** Provided cheatsheets
| Command            | Title           | Description                                                   | Source                                  |
|--------------------+-----------------+---------------------------------------------------------------+-----------------------------------------|
| ~cheat/adoc~       | AsciiDoc        | AsciiDoc + asciidoctor Syntax Quick Reference                 | [[https://github.com/asciidoctor/asciidoctor.org][github.com/asciidoctor/asciidoctorg.org]] |
| ~cheat/es6~        | ES2015+         | A quick overview of JavaScript features in ES2015 and beyond. | [[https://github.com/rstacruz/cheatsheets/blob/master/es6.md][devhints.io/es6]]                         |
| ~cheat/emacs~      | Emacs           | Small guide to emacs functions & shortcuts                    | [[https://thb.lt/emacs-cheatsheet/][thb.lt/emacs-cheatsheet]]                 |
| ~cheat/go~         | go              | Go-lang Cheatsheet                                            | [[https://github.com/rstacruz/cheatsheets/blob/master/go.md][devhints.io/go]]                          |
| ~cheat/jsdoc~      | JSDoc           | JSDoc syntax overview                                         | [[https://github.com/rstacruz/cheatsheets/blob/master/jsdoc.md][devhints.io/jsdoc]]                       |
| ~cheat/magit~      | Magit           | Magit Reference Card                                          | [[https://github.com/magit/magit/wiki/Cheatsheet][github.com/magit/magit]]                  |
| ~cheat/npm~        | Npm             | Npm Cheatsheet                                                | [[https://github.com/npm/npm/wiki/Cheatsheet][github.com/npm/npm]]                      |
| ~cheat/org-syntax~ | Org mode syntax | Syntax overview of Org-Mode files                             | [[https://github.com/higham/org-mode-syntax-cheat-sheet/blob/master/cheat_sheet.org][github.com/higham]]                       |
| ~cheat/org~        | Org mode        | Org-Mode Reference Card                                       | [[https://orgmode.org/worg/orgcard.org.html][orgmode.org]]                             |
| ~cheat/python~     | python          | Python Cheatsheet                                             | [[https://github.com/rstacruz/cheatsheets/blob/master/python.md][devhints.io/python]]                      |
| ~cheat/xpath~      | Xpath           | Collection of XPath examples                                  | [[https://github.com/rstacruz/cheatsheets/blob/master/xpath.md][devhints.io/xpath]]                       |

** Installation
The package has not yet been published to MELPA yet so you'll have to install it manually or use [[https://framagit.org/steckerhalter/quelpa][quelpa]].
#+BEGIN_SRC elisp
(quelpa '(cheat :fetcher github :repo "pbellon/cheat"))
(require 'cheat)
(cheat--setup)

;; Or, if you have use-package & quelpa-use-package
(use-package cheat
    :quelpa (cheat :fetcher github :repo "pbellon/cheat")
    :config
    (cheat--setup))
#+END_SRC

** Configuration
***  Loaded categories
:PROPERTIES:
:CUSTOM_ID: loaded-categories
:END:

You can change which set of cheatsheet is loaded by default by the package by changing =cheat--categories= value: 

#+BEGIN_SRC elisp
(setq cheat--categories '("JavaScript" "Emacs" "CLI"))
#+END_SRC

You can see all available categories by calling ~cheat--list-categories~ interactive function.


*** Register cheatsheet folders
:PROPERTIES:
:CUSTOM_ID: register-cheatsheet-folders
:END:

Register your cheatsheets folds in the ~cheat--sheets-folders~ list:

#+BEGIN_SRC elisp
(add-to-list 'cheat--sheets-folders "path/to/my/cheatsheets/")
#+END_SRC

You can then update the loaded cheatsheets with the ~cheat--reload-sheets~ interactive function to see you new cheatsheets. See [[#cheatsheet-template][Cheatsheet template]] to see how to write new cheatsheets.


*** Cheatsheet template
:PROPERTIES:
:CUSTOM_ID: cheatsheet-template
:END:

All sheets files must be located under a folder included in =cheat--sheets-folders=.
They must have an header like bellow:

#+BEGIN_SRC org
#+TITLE: My title
#+COMMAND: mycommand
#+DESCRIPTION: Optional description
#+CATEGORY: Category
#+END_SRC

Make sure to have the /Category/ of your new cheatsheet listed under ~cheat--categories~ & call ~cheat--reload-sheets~ to load it .

** ~cheat~ or ~cheat/<command>~  Open a cheatsheet
| ~M-x RET cheat RET <command> RET~ | Open a cheatsheet having given <command>. Needs ivy to work |
| ~M-x RET cheat/<command> RET~ | All cheatsheets have dedicated interactive functions, for instance ~cheat/adoc~ opens AsciiDoc cheatsheet. |

** List cheatsheets

List all cheatsheets filtered by [[#loaded-categories][Loaded categories]].
 
~M-x RET cheat--list-sheets RET~


